#!/usr/bin/env python
import argparse
import sys
sys.path.append('.')
sys.path.append('..')

from AwAws.SharedResources.parameters import Parameters


parser = argparse.ArgumentParser()
parser.add_argument('-s', '--service', help='service to access')
parser.add_argument('-n', '--name', help='name of paramter')
parser.add_argument('-e', '--env', default='dev',
                    help='environment to use (default: %(default)s')
parser.add_argument('-r', '--region', default='us-east-2',
                    help='region to use (default: %(default)s')
parser.add_argument('-v', '--value', help='value to set')
parser.add_argument('-o', '--overwrite', default=False,
                    action='store_true', help='overwrite existing value')
args = parser.parse_args()

env = args.env
service = args.service
name = args.name
new_value = args.value
overwrite = args.overwrite

params = Parameters(env, service, name)
params.get_client()
value = params.get()


print('Current Value:', value)

if new_value is not None:
    try:
        version = params.put(new_value, overwrite)
        assert params.get() == new_value
    except (RuntimeError, AssertionError) as e:
        print('Error updating value:', str(e))
        exit()

    print('Value for', params.fully_qualified_parameter_name(), 'is', new_value)





